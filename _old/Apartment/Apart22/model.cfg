class CfgSkeletons
{
	class Apartment_22_Skeleton
	{
		isDiscrete = 1;
		skeletonInherit="";
		skeletonBones[]=
		{
			"door_front", "",
			"door_1", "",
			"door_2", "",
			"door_3", "",
			"door_4", "",
			"door_5", "",
			"door_6", "",
			"door_7", "",
			"door_8", ""
		};
	};
	
};
class CfgModels
{
	class Apartment_22
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "Apartment_22_Skeleton";
		class Animations
		{
			class door_front_rot
			{
				type			= rotation;
				source			= Door_front_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_front; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_front_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad 100); // "rad" converts from degrees to radians
			};


			class door_1_rot
			{
				type			= rotation;
				source			= Door_1_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_1_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad 100); // "rad" converts from degrees to radians
			};


			class door_2_rot
			{
				type			= rotation;
				source			= Door_2_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_2_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad 100); // "rad" converts from degrees to radians
			};


			class door_3_rot
			{
				type			= rotation;
				source			= Door_3_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_3_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad -100); // "rad" converts from degrees to radians
			};


			class door_4_rot
			{
				type			= rotation;
				source			= Door_4_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_4; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_4_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad -100); // "rad" converts from degrees to radians
			};

			class door_5_rot
			{
				type			= rotation;
				source			= Door_5_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_5; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_5_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad 100); // "rad" converts from degrees to radians
			};

			class door_6_rot
			{
				type			= rotation;
				source			= Door_6_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_6; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_6_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad 100); // "rad" converts from degrees to radians
			};

			class door_7_rot
			{
				type			= rotation;
				source			= Door_7_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_7; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_7_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad -100); // "rad" converts from degrees to radians
			};

			class door_8_rot
			{
				type			= rotation;
				source			= Door_8_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= door_8; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= door_8_axis; // Axis of the rotation.
				memory			= 1;
				minValue		= 0; // Value of the controller at which the rotation will be angle0
				maxValue		= 1; // Value of the controller at which the rotation will be angle1
				angle0			= 0;
				angle1			= (rad -100); // "rad" converts from degrees to radians
			};
		};
	};
};