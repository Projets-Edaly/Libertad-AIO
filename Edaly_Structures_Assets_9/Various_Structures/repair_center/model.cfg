// Note: this model config is created with 4-space [tab] symbols. If you use different settings, the structure may not be as clear.
class CfgSkeletons
{
  class Default
  {
    isDiscrete = 1;
    skeletonInherit = "";
    skeletonBones[] = {};
  };

  // Skeleton of undamaged variant of the house, containing doors and windows. Note that glass #3 is not a window but the glass pane of glass door (door #1). Therefore
  // (similar to door handles) it's bones need to be appropriately linked to bones of the door so that it moves along with it when the door is opened/closed.
  class Repair_center_F_skeleton: Default
  {
    skeletonInherit = "Default";
    skeletonBones[] =
    {
      // Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
      "door_1",       "",
      "door_2",       ""
    };
  };
};

class CfgModels
{
  class Default
  {
    sectionsInherit = "";
    sections[] = {};
    skeletonName = "";
  };

  class Edaly_Repair_center_01_F: Default // class name must be the same as name of p3d
  {
    skeletonName = "Repair_center_F_skeleton"; // Set to use above defined skeleton.
    sections[] =
    {
      // Selections from the model that are used in config.cpp for switching textures and materials.
      "body"
    };
    sectionsInherit = "";
    class Animations
    {
      // Animation for rotating door #1 (without a door handle)
      class door_1_rot
      {
        type      = rotation;
        source      = door_1_source; // Controler defined in class AnimationSources in config.cpp.
        selection   = door_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
        axis      = door_1_axis; // Axis of the rotation.
        memory      = 1;
        minValue    = 0; // Value of the controller at which the rotation will be angle0
        maxValue    = 1; // Value of the controller at which the rotation will be angle1
        angle0      = 0;
        angle1      = (rad 90); // "rad" converts from degrees to radians
      };

      // Animation for door #2 (with a door handle). Note that when door is being closed, the animations run in reverse.
      class door_2_rot: door_1_rot
      {
        source      = door_2_source;
        selection   = door_2;
        axis      = door_2_axis;
      };
    };
  };
};
